import ActionJSON from './action-json.interface'

/**
   * @typedef {Object} BaseRecord~JSON
   * @property {Object} params    all flatten params {@link https://github.com/hughsk/flat}
   * @property {Object} populated it contains all populated references. When given
   *                              record has property `userId` and it is a reference
   *                              under populated.userId there will be nested
   *                              {@link BaseRecord~JSON} to a User record.
   * @property {BaseRecord~JSON | null} populated.propertyName populated reference property
   * @property {Object} [errors]  errors for given field, it there are any
   * @property {String} [errors.propertyName.message]
   * @property {String} id        uniq Id of a record. It can be used when searching the AdminBro
   *                              autogenerated API
   * @property {String} title     title of an resource, which is a value of a property marked as
   *                              `isTitle`
   * @property {Array<BaseAction~JSON>} actions which can be invoked on this particular record
   */

export default interface RecordJSON {
  params: {[key: string]: any};
  populated: {[key: string]: RecordJSON} | {};
  errors: {[key: string]: {
    message: string;
  };} | {};
  id: string;
  title: string;
  actions: Array<ActionJSON>;
}
