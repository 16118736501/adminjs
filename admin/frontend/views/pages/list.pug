extends ../layout/layout
include ../mixins/breadcrumb
include ../mixins/emptyTable

block content
  section.table-list
    +breadcrumb([database.name(), model.name()])
    .column
      .level
        .title=model.name()
        if total
          .field.is-grouped
            .control
              a.button.is-primary(href=h.newInstanceUrl(database, model))
                span(class="icon is-small")
                  i(class="fas fa-plus")
                .btn-text Add new
            .control
              a.button.is-light 
                span(class="icon is-small")
                  i(class="fas fa-download")
                .btn-text Export
    if total
      .column
        .box
          table.table.is-hoverable.is-fullwidth
            thead
              tr
                for prop in properties.filter(p => p.isVisible())
                  th= prop.name().toUpperCase()
                th ACTIONS
            tbody
              for instance in instances
                tr
                  for prop in properties.filter(p => p.isVisible())
                    td= instance.param(prop.name())
                  td
                    a(href=h.showInstanceUrl(database, model, instance)) Show
                    a(href=h.editInstanceUrl(database, model, instance)) Edit
                    a(href=h.deleteInstanceUrl(database, model, instance)) Delete
                    
          - pages = h.paginate(total, page, perPage).pages
          if pages.length > 1
            .level-item
              .box.pagination.is-inline-block
                a.button.is-white
                 i(class="fas fa-angle-left")
                for p in h.paginate(total, page, perPage).pages
                  a.button.is-white(class={ 'active' : p == page }
                    href=h.listUrl(database, model, { page: p })
                  )= p
                a.button.is-white
                  i(class="fas fa-angle-right")
    else
      +emptyTable(h.newInstanceUrl(database, model))