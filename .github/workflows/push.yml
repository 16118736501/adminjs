name: CI/CD
on: [push, pull_request]
jobs:
  setup:
    name: setup
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-dev-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-dev-node_modules-
      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

  build:
    name: build
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-dev-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-dev-node_modules-
      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: build
        run: yarn build
      - name: types
        run: yarn types
      - name: Upload Build
        if: |
          contains(github.ref, 'refs/heads/next')
          || contains(github.ref, 'refs/heads/master')
          || contains(github.ref, 'refs/heads/next-major')
          || contains(github.ref, 'refs/heads/beta')
          || contains(github.ref, 'refs/heads/dev')
        uses: actions/upload-artifact@v1
        with:
          name: lib
          path: lib
      - name: Upload Types
        if: |
          contains(github.ref, 'refs/heads/next')
          || contains(github.ref, 'refs/heads/master')
          || contains(github.ref, 'refs/heads/next-major')
          || contains(github.ref, 'refs/heads/beta')
          || contains(github.ref, 'refs/heads/dev')
        uses: actions/upload-artifact@v1
        with:
          name: types
          path: types

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-dev-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-dev-node_modules-
      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Lint
        run: yarn lint
      - name: Test
        if: "!contains(github.ref, 'refs/heads/master')"
        run: yarn test

  publish:
    name: Publish
    if: |
      github.event_name == 'push'
      && (
        contains(github.ref, 'refs/heads/next')
        || contains(github.ref, 'refs/heads/master')
        || contains(github.ref, 'refs/heads/next-major')
        || contains(github.ref, 'refs/heads/beta')
        || contains(github.ref, 'refs/heads/dev')
      )
    needs:
      - test
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-dev-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-dev-node_modules-
      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Download Build
        uses: actions/download-artifact@v1
        with:
          name: lib
      - name: Download Types
        uses: actions/download-artifact@v1
        with:
          name: types
      - name: Release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: yarn release
